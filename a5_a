#!/bin/bash

declare -a mainMenuOptions
declare -a subMenuOneOptions
declare -a subMenuTwoOptions
declare -a subMenuThreeOptions
declare -a subMenuFourOptions
declare -a subMenuFiveOptions
declare -a subMenuSixOptions
declare -i choiceInt
declare -ir NOT_MADE=0
main() {
	clear
	setChoiceInt
    populateMainMenuOptions
    populateSubMenuOneOptions
    populateSubMenuTwoOptions
    populateSubMenuThreeOptions
    populateSubMenuFourOptions
    populateSubMenuFiveOptions
    populateSubMenuSixOptions
	while [ $choiceInt -eq $NOT_MADE ]  ## http://stackoverflow.com/questions/2188199/how-to-use-double-or-single-bracket-parentheses-curly-braces
	do
        displayWelcome
		displayMenu "${mainMenuOptions[@]}" 
        getUsersMenuChoice "${mainMenuOptions[@]}" 
	done
	exit 0  ## https://askubuntu.com/questions/892604/meaning-of-exit-0-exit-1-and-exit-2-in-a-bash-script
}

setChoiceInt() {
		choiceInt=0
}

populateMainMenuOptions(){
        mainMenuOptions=("Editing Commands" "Games" "User Administration" "Process Commands" "System Commands" "Network Commands")
}

populateSubMenuOneOptions(){
        subMenuOneOptions=("Insert" "Write" "Delete")
}

populateSubMenuTwoOptions(){
        subMenuTwoOptions=("Insert" "Write" "Delete")
}

populateSubMenuThreeOptions(){
        subMenuThreeOptions=("Insert" "Write" "Delete")
}

populateSubMenuFourOptions(){
        subMenuFourOptions=("Insert" "Write" "Delete")
}

populateSubMenuFiveOptions(){
        subMenuFiveOptions=("Insert" "Write" "Delete")
}

populateSubMenuSixOptions(){
        subMenuSixOptions=("Insert" "Write" "Delete")
}

displayWelcome(){
echo -e "\n WELCOME TO THE MACHINE \n"
}

displayMenu(){
declare -i menuOptionNumber
declare -a menuOptions=("$@")
for (( i=0; i < ${#menuOptions[@]}; i++ ))
do
        menuOptionNumber=($i+1)
        echo -e "${menuOptionNumber}.) ${menuOptions[$i]}\n"
done
}

getUsersMenuChoice(){
declare -a menuOptions=("$@")
while [ $choiceInt -lt 1 ] || [ $choiceInt -gt "${#menuOptions[@]}" ]
do
    read -p "Please make a selection (1 - "${#menuOptions[@]}" ): " choiceInt

    if [ $choiceInt -lt 1 ] || [ $choiceInt -gt "${#menuOptions[@]}" ]

		    then
                    if [ $choiceInt -ne $NOT_MADE ]
                    then
			                echo -e "Incorrect input. Please try again\n"
                    fi
        
    else 
            processMenuChoice "${menuOptions[@]}"
    fi
done
}

processMenuChoice(){ 
#declare -a menuOptions=("$@")
#declare -i menuOptionNumber
#for (( i=0; i < ${#menuOptions[@]}; i++ ))
#    do
#      menuOptionNumber=i+1        
#        if [ $choiceInt -eq $menuOptionNumber ] 
#        then
#            openMenuChoice "$menuOptions" "$menuOptionsNumber"
if [ $choiceInt -eq 1 ]
then
        openMenuChoiceOne
    elif [ $choiceInt -eq 2 ] 
    then
            openMenuChoiceTwo
    elif [ $choiceInt -eq 3 ] 
    then
            openMenuChoiceThree
    elif [ $choiceInt -eq 4 ] 
    then
            openMenuChoiceFour
    elif [ $choiceInt -eq 5 ] 
    then
            openMenuChoiceFive
    else 
            openMenuChoiceSix
        fi
    #done
}

openMenuChoiceOne(){
clear
echo -e "MENU ONE"
displayMenu "${subMenuOneOptions[@]}" 
setChoiceInt
getUsersMenuChoice "${subMenuOneOptions[@]}" 
}

openMenuChoiceTwo(){
clear
echo -e "MENU TWO"
}

openMenuChoiceThree(){
clear
echo -e "MENU THREE"
}

openMenuChoiceFour(){
clear
echo -e "MENU FOUR"
}

openMenuChoiceFive(){
clear
echo -e "MENU FIVE"
}

openMenuChoiceSix(){
clear
echo -e "MENU SIX"
}
main


